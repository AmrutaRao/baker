apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: baas-akka-demo
  name: baas-akka-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: baas-akka-demo
  template:
    metadata:
      labels:
        app: baas-akka-demo
        actorSystemName: baas
    spec:
      containers:
        - name: baas-akka-demo
          image: apollo.docker.ing.net/baas-node-state-kube:latest
          imagePullPolicy: Never
          readinessProbe:
            httpGet:
              path: /api/v3
              port: 8080
          livenessProbe:
            tcpSocket:
              port: 8080
          ports:
            # akka remoting
            - name: remoting
              containerPort: 2552
              protocol: TCP
            # akka-management and bootstrap
            - name: management
              containerPort: 8558
              protocol: TCP
            - name: webaccess
              containerPort: 8443
              protocol: TCP
          #namespace
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          #namespace

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
subjects:
  # Note the `name` line below. The first default refers to the namespace. The second refers to the service account name.
  # For instance, `name: system:serviceaccount:myns:default` would refer to the default service account in namespace `myns`
  - kind: User
    name: system:serviceaccount:default:default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
